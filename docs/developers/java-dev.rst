Java Devolopment
================

Introduction
------------

GraphAr Java library based on GraphAr C++ library and an efficient FFI
for Java and C++ called
`FastFFI <https://github.com/alibaba/fastFFI>`__.

Source Code Level
~~~~~~~~~~~~~~~~~

-  Interface

-  Class

-  JNI code

-  GraphAr C++ library

If you want to use classes or functions of GraphAr C++ library through JAVA SDK, you only need to write interfaces with
annotations. After the interfaces are ready, the java code for the interfaces and the the C++ code which include JNI
code for native methods will be automatically generated by FastFFI.For
annotation's usage, please refer to
`FastFFI <https://github.com/alibaba/fastFFI>`__.

If llvm4jni is opened, part of JNI code will be transferred to java
class.

Runtime Level
~~~~~~~~~~~~~

Interfaces and classes will be compiled to ``.class`` files.

By writing `CMakeLists.txt <https://github.com/alibaba/GraphAr/blob/main/java/CMakeLists.txt>`__, we integrated all C++
dependencies(e.g. JNI code, GraphAr C++
library and other C++ library) into a bridge
dynamic library called gar-jni which can be called by native methods
directly.

Building GraphAr Java
---------------------

Please refer to `GraphAr Java Library user guide <../user-guide/java-lib.html>`__.

Code Style
----------

We follow `Google Java
style <https://google.github.io/styleguide/javaguide.html>`__. To ensure
CI for checking code style will pass, please ensure check below is
success:

.. code-block:: bash

   mvn spotless:check

If there are violations, running command below to automatically format:

.. code-block:: bash

   mvn spotless:apply
