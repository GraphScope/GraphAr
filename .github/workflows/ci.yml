name: GraphAr C++ CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - '**.md'
      - '**.rst'
      - 'docs/**'
      - 'misc/**'
      - 'spark/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - '**.md'
      - '**.rst'
      - 'docs/**'
      - 'misc/**'
      - 'spark/**'

concurrency:
  group: ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  GraphAr-on-ubuntu:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
          submodules: true

    - name: Cache for ccache
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ${{ matrix.os }}-build-ccache-${{ hashFiles('**/git-modules.txt') }}
        restore-keys: |
          ${{ matrix.os }}-build-ccache-

    - name: Install dependencies
      run: |

        # install the latest arrow deb to test arrow
        wget -c https://apache.jfrog.io/artifactory/arrow/"$(lsb_release --id --short | tr 'A-Z' 'a-z')"/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb \
            -P /tmp/
        sudo apt-get install -y -V /tmp/apache-arrow-apt-source-latest-"$(lsb_release --codename --short)".deb
        sudo apt-get update -y
        sudo apt-get install -y libarrow-dev
        sudo apt-get install -y libboost-graph-dev ccache libcurl4-openssl-dev

    - name: CMake
      run: |
        mkdir build
        pushd build
        cmake ../cpp -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON
        popd

    - name: Cpp Format and lint
      run: |
        # install clang-format
        sudo curl -L https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-22538c65/clang-format-8_linux-amd64 --output /usr/bin/clang-format
        sudo chmod +x /usr/bin/clang-format

        pushd build

        # validate format
        function prepend() { while read line; do echo "${1}${line}"; done; }

        make gar-clformat
        GIT_DIFF=$(git diff --ignore-submodules)
        if [[ -n $GIT_DIFF ]]; then
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            echo "| clang-format failures found!"
            echo "|"
            echo "$GIT_DIFF" | prepend "| "
            echo "|"
            echo "| Run: "
            echo "|"
            echo "|    make clformat"
            echo "|"
            echo "| to fix this error."
            echo "|"
            echo "| Ensure you are working with clang-format-8, which can be obtained from"
            echo "|"
            echo "|    https://github.com/muttleyxd/clang-tools-static-binaries/releases"
            echo "|"
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            exit -1
        fi

        function ec() { [[ "$1" == "-h" ]] && { shift && eval $* > /dev/null 2>&1; ec=$?; echo $ec; } || eval $*; ec=$?; }

        ec make gar-cpplint
        if [[ "$ec" != "0" ]]; then
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            echo "| cpplint failures found! Run: "
            echo "|"
            echo "|    make vineyard_cpplint"
            echo "|"
            echo "| to fix this error."
            echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
            exit -1
        fi

        popd

    - name: Build GraphAr
      run: |
        pushd build
        make -j$(nproc)
        make gar-ccache-stats
        popd

    - name: Test
      run: |
        cd build
        export GAR_TEST_DATA=$PWD/../testing/
        make test

  GraphAr-on-centos8:
    runs-on: ubuntu-22.04
    container:
      image: centos:latest
    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        pushd /etc/yum.repos.d/
        sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
        sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
        popd
        yum update -y
        dnf groupinstall -y "Development Tools"
        yum install -y boost-devel libcurl-devel openssl-devel cmake

    - name: Build GraphAr
      run: |
        mkdir build
        pushd build
        cmake ../cpp
        make -j$(nproc)
        popd
